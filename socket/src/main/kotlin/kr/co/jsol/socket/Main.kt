package kr.co.jsol.socket

import org.springframework.context.ConfigurableApplicationContext
import org.springframework.context.support.ClassPathXmlApplicationContext
import org.springframework.integration.endpoint.AbstractEndpoint
import org.springframework.integration.ip.tcp.connection.AbstractClientConnectionFactory
import org.springframework.integration.ip.tcp.connection.AbstractServerConnectionFactory
import org.springframework.integration.ip.util.TestingUtilities
import java.util.*

/*
 * Copyright 2002-2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Demonstrates the use of a gateway as an entry point into the integration flow.
 * The message generated by the gateway is sent over tcp by the outbound gateway
 * to the inbound gateway. In turn the inbound gateway sends the message to an
 * echo service and the echoed response comes back over tcp and is returned to
 * the test case for verification.
 *
 *
 * The test uses explicit transformers to convert the byte array payloads to
 * Strings.
 *
 *
 * Several other samples are provided as JUnit test-cases:
 *
 *
 *  * TcpClientServerDemoWithConversionServiceTest
 *  * TcpServerConnectionDeserializeTest
 *  * TcpServerCustomSerializerTest
 *
 *
 * @author Gunnar Hillert
 * @author Artem Bilan
 */
object Main {
    /**
     * Load the Spring Integration Application Context
     *
     * @param args - command line arguments
     */
    @JvmStatic
    fun main(args: Array<String>) {
        val scanner = Scanner(System.`in`)
        println(
            """

            =========================================================

                Welcome to the Spring Integration
                      TCP-Client-Server Sample!

                For more information please visit:
                https://www.springsource.org/spring-integration/

            =========================================================

            """.trimIndent()
        )
        val context = setupContext()
        val gateway = context.getBean(SimpleGateway::class.java)
        val crLfServer = context.getBean(
            AbstractServerConnectionFactory::class.java
        )
        val client = context.getBean(
            AbstractClientConnectionFactory::class.java
        )
        val outGateway = context.getBean("outGateway", AbstractEndpoint::class.java)
        print("Waiting for server to accept connections...")
        TestingUtilities.waitListening(crLfServer, 10000L)
        client.port = crLfServer.port
        outGateway.start()
        println("running.\n\n")
        println("Please enter some text and press <enter>: ")
        println("\tNote:")
        println("\t- Entering FAIL will create an exception")
        println("\t- Entering q will quit the application")
        print("\n")
        println(
            "\t--> Please also check out the other samples, " +
                    "that are provided as JUnit tests."
        )
        println("\t--> You can also connect to the server on port '" + crLfServer.port + "' using Telnet.\n\n")
        while (true) {
            val input = scanner.nextLine()
            if ("q" == input.trim { it <= ' ' }) {
                break
            } else {
                val result = gateway.send(input)
                println(result)
            }
        }
        println("Exiting application...bye.")
        context.close()
        System.exit(0)
    }

    fun setupContext(): ConfigurableApplicationContext {
        return ClassPathXmlApplicationContext("tcpClientServer-context.xml.xml")
    }
}
